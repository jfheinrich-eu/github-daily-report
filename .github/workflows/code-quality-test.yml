name: Code Quality and Test Workflow
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches-ignore:
      - main
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Harden the runner (StepSecurity)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          allowed-endpoints: |
            github.com:443
            api.github.com:443
            pre-commit.ci:443
            results.pre-commit.ci:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry self add poetry_plugin_export

      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --all-groups -o requirements.txt
          pip install -r requirements.txt

      - name: Run pre-commit/action
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v.3.0.1
        env:
          PYTHONPATH: ${{ github.workspace }}/src
      - name: Run pre-commit-ci/lite-action
        uses: pre-commit-ci/lite-action@5d6cc0eb514c891a40562a58a8e71576c5c7fb43 # pre-commit-ci/lite-action@v1.1.0
        env:
          PYTHONPATH: ${{ github.workspace }}/src

  test-and-coverage:
    permissions:
      contents: read
      pull-requests: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          allowed-endpoints: |
            tech.jfheinrich.eu:443

      - uses: jfheinrich-eu/psono-secret-whisperer@61fb8cf9ca70b1bf0bf832da4af5d8ae7a665613 # v1.0.0
        id: psono-secrets
        with:
          ci_api_key_id: ${{ secrets.PSONO_API_KEY_ID }}
          ci_api_secret_key_hex: ${{ secrets.PSONO_API_SECRET_KEY_HEX }}
          ci_server_url: ${{ vars.PSONO_SERVER_URL }}
          secret_id: ${{ secrets.PSONO_BARECHECK_ENVIRONMENT }}
          secret_type: "env"
          secret_fields: "BARECHECK_GITHUB_APP_TOKEN,API_KEY_PIPREQS_ACTION"
          mask_secrets: "BARECHECK_GITHUB_APP_TOKEN,API_KEY_PIPREQS_ACTION"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-root --with dev

      - name: Run pytest with coverage
        run: poetry run pytest

      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cov.xml
          path: coverage/

      - name: Display coverage in PR (if available)
        if: github.event_name == 'pull_request'
        uses: 5monkeys/cobertura-action@ee5787cc56634acddedc51f21c7947985531e6eb # v14
        with:
          path: coverage/cov.xml
          minimum_coverage: 80

      - name: Upload results to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 #v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jfheinrich-eu/github-daily-report
          files: coverage/cov.xml
          verbose: true

      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@d92cdaec187f89f0886ccec37acf11e2a6a85f70 # v1.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          barecheck-github-app-token: ${{ steps.psono-secrets.outputs.secret1 }}
          barecheck-api-key: ${{ steps.psono-secrets.outputs.secret2 }}
          lcov-file: "coverage/cov.info"
          send-summary-comment: true
          show-annotations: "warning"
