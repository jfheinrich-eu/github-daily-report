name: New release Workflow
permissions:
  contents: write
  pull-requests: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Match semantic versioning tags like v1.0.0, v2.3.4, etc.'

jobs:
  tests:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ github.ref_name }}
    steps:
      - name: Harden the runner (StepSecurity)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
          allowed-endpoints: |
            github.com:443
            api.github.com:443
            pre-commit.ci:443
            results.pre-commit.ci:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-root --with dev
      - name: Run tests and coverage
        run: poetry run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build_and_push_image:
    needs:
      - tests
    runs-on: ubuntu-latest
    env:
      PLATFORMS: "linux/amd64,linux/386,linux/arm64"
      VERSION: ${{ needs.tests.outputs.VERSION }}
    steps:
      - name: Harden the runner (StepSecurity)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
          allowed-endpoints: |
            tech.jfheinrich.de:443
            github.com:443
            api.github.com:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Dockerhub Registry Secrets
        id: secret_whisperer
        uses: ./.github/actions/secret_whisperer_dockerhub_registry
        with:
          PSONO_API_KEY_ID: ${{ secrets.PSONO_API_KEY_ID }}
          PSONO_API_SECRET_KEY_HEX: ${{ secrets.PSONO_API_SECRET_KEY_HEX }}
          PSONO_SERVER_URL: ${{ vars.PSONO_SERVER_URL }}
          PSONO_DOCKERHUB_REGISTRY_ID: ${{ secrets.PSONO_DOCKERHUB_REGISTRY_ID }}

      - name: Docker login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ steps.secret_whisperer.outputs.CI_REGISTRY_USER }}
          password: ${{ steps.secret_whisperer.outputs.CI_REGISTRY_PASSWORD }}

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build and push image
        id: docker-build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile-daily-report
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            docker.io/jfheinrich/github-daily-report:${{ env.VERSION }}
            docker.io/jfheinrich/github-daily-report:latest
          labels: |
            org.opencontainers.image.title=github-daily-report
            org.opencontainers.image.name=jfheinrich/github-daily-report
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.description=GitHub Daily Report Generator (Markdown + Email)
            org.opencontainers.image.url=https://github.com/jfheinrich-eu/github-daily-report
            org.opencontainers.image.source=https://github.com/jfheinrich-eu/github-daily-report
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.authors=J.F. Heinrich <jfheinrich@users.noreply.github.com>
            org.opencontainers.image.vendor=J.F. Heinrich
            org.opencontainers.image.documentation=https://github.com/jfheinrich-eu/github-daily-report#readme
            org.opencontainers.image.ref.name=${{ env.VERSION }}
            org.opencontainers.image.base.name=python:3.12-alpine

      - name: Update README action reference
        uses: ./.github/actions/update_readme_action_reference
        with:
          README_FILE: README-Dockerfile-github-daily-report.md

      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@432a30c9e07499fd01da9f8a49f0faf9e0ca5b77 # v4.0.2
        with:
          username: ${{ steps.secret_whisperer.outputs.CI_REGISTRY_USER }}
          password: ${{ steps.secret_whisperer.outputs.CI_REGISTRY_PASSWORD }}
          repository: jfheinrich/github-daily-report
          short-description: "GitHub Daily Report Generator (Markdown + Email)"
          readme-filepath: README-Dockerfile-github-daily-report.md
          enable-url-completion: true

  release:
    needs:
      - tests
      - build_and_push_image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit
          allowed-endpoints: |
            api.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@6d71e098526ee17bae963f058d34cd763378337f # v1.10.2
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Update README action reference
        uses: ./.github/actions/update_readme_action_reference
        with:
          README_FILE: README.md

      - name: Create Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: |
            ## Changes
            ${{ steps.changelog.outputs.changes }}

      - name: Commit and push CHANGELOG.md and README.md to new branch
        id: auto-commit-push
        if: steps.changelog.outputs.changes != ''
        uses: ./.github/actions/auto-commit-push
        with:
          RUN_ID: ${{ github.run_id }}
          REF_NAME: ${{ github.ref_name }}

      - name: Create Pull Request
        id: cpr
        if: steps.check-auto-commit-push.outputs.auto-commit-push == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e #v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "docs: Update CHANGELOG.md and README.md for ${{ github.ref_name }}"
          body: "Automated change log and readme update for release.\n\nThis PR updates the CHANGELOG.md and README.md files with the latest changes from the release.\n\nChanges:\n${{ steps.changelog.outputs.changes }}"
          base: main
          branch: changelog-update-${{ github.run_id }}
          commit-message: "docs: update CHANGELOG.md and README.md for ${{ github.ref_name }} [skip ci]"
          labels: documentation, skip-release
          delete-branch: true

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@a660677d5469627102a1c1e11409dd063606628d # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: merge
