name: "GitHub Daily Report"
description: "Generates a daily GitHub report and returns it as an output."
author: "Joerg Heinrich"
inputs:
  GITHUB_TOKEN:
    description: "GitHub Token"
    required: true
  REPO_NAME:
    description: "Repository name (owner/repo)"
    required: true
  EMAIL_SENDER:
    description: "Email sender"
    required: true
  EMAIL_USER:
    description: "Email user"
    required: true
  EMAIL_RECEIVER:
    description: "Email recipient"
    required: true
  EMAIL_PASSWORD:
    description: "Email password"
    required: true
  OPENAI_API_KEY:
    description: "OpenAI API key"
    required: true
  SMTP_SERVER:
    description: "SMTP server"
    required: true
  SMTP_PORT:
    description: "SMTP port"
    required: true
  UPLOAD_REPORT:
    description: "Upload the report as an artifact"
    required: false
    default: "true"
  REPORT_FILE_NAME:
    description: "Name of the report file to be uploaded"
    required: false
    default: "daily_report.md"
outputs:
  report:
    value: ${{ steps.generate_report.outputs.report }}
    description: "The generated Markdown report"
runs:
  using: "composite"
  steps:
    - name: checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.12"
    - name: Install Poetry and dependencies
      shell: bash
      env:
        RUN_ID: ${{ github.run_id }}
      run: |
        pip install poetry
        poetry self add poetry_plugin_export
        export RUN_ID=$RUN_ID
        poetry export -f requirements.txt --without-hashes --all-groups -o requirements-$RUN_ID.txt
        pip install -r requirements-$RUN_ID.txt
        rm -rf requirements-$RUN_ID.txt
    - name: Run daily report generation
      id: generate_report
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        REPO_NAME: ${{ inputs.REPO_NAME }}
        EMAIL_SENDER: ${{ inputs.EMAIL_SENDER }}
        EMAIL_USER: ${{ inputs.EMAIL_USER }}
        EMAIL_RECEIVER: ${{ inputs.EMAIL_RECEIVER }}
        EMAIL_PASSWORD: ${{ inputs.EMAIL_PASSWORD }}
        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}
        SMTP_SERVER: ${{ inputs.SMTP_SERVER }}
        SMTP_PORT: ${{ inputs.SMTP_PORT }}
        PYTHONPATH: ${{ github.workspace }}/src
      run: |
        python -m daily_report.main
    - name: Upload report
      if: ${{ inputs.UPLOAD_REPORT == 'true' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ inputs.REPORT_FILE_NAME }}
